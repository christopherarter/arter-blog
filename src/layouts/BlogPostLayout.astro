---
import BaseLayout from './BaseLayout.astro';
import TableOfContents from '../components/TableOfContents.astro';
import TableOfContentsMobile from '../components/TableOfContentsMobile.astro';
import ShareLinks from '../components/ShareLinks.astro';
import type { Heading } from '../utils/markdown-utils';

type Props = {
    title: string;
    description?: string;
    image?: string | { src: string; alt?: string };
    showHeader?: boolean;
    headings?: Heading[];
};

const { title, description, image, showHeader, headings } = Astro.props;

// Ensure `image` prop matches the shape expected by `BaseLayout` / `BaseHead`
const resolvedImage = typeof image === 'string' ? { src: image } : image;

// Get the current URL
const { href } = Astro.url;
---

<BaseLayout showHeader={showHeader ?? false} title={title} description={description} image={resolvedImage} headings={headings}>
    <div class={`flex gap-4 pb-20 md:pb-0 ${headings && headings.length > 0 ? '' : 'md:justify-center'}`}>
        <main class={`w-full ${headings && headings.length > 0 ? 'md:w-3/4' : 'md:max-w-4xl'}`} role="main" aria-label="Article content">
            <slot />
        </main>
        {headings && headings.length > 0 && (
            <aside class="w-full md:w-1/4" role="complementary" aria-label="Table of contents sidebar">
                <div class="sticky top-0 hidden md:block">
                    <TableOfContents headings={headings} />
                    <ShareLinks title={title} url={href} />
                </div>
            </aside>
        )}
    </div>
    <TableOfContentsMobile headings={headings} title={title} url={href} />
</BaseLayout>
