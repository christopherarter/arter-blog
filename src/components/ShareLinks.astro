---
type Props = {
    title: string;
    url: string;
};

const { title, url } = Astro.props;

const blueskyContent = `${title} ${url}`;
const encodedBlueskyContent = encodeURIComponent(blueskyContent);
const blueskyUrl = `https://bsky.app/intent/compose?text=${encodedBlueskyContent}`;

const linkedinUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`;
---

<div class="share-links">
    <h3 class="text-sm font-semibold mb-2">Share</h3>
    <div class="flex gap-3">
        <a 
            href={blueskyUrl} 
            class="share-link hover:text-main transition-colors"
            target="_blank" 
            rel="noopener noreferrer"
            title="Share on Bluesky"
            aria-label="Share on Bluesky"
        >
            <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 10.8c-1.087-2.114-4.046-6.053-6.798-7.995C2.566.944 1.561 1.266.902 1.565.139 1.908 0 3.08 0 3.768c0 .69.378 5.65.624 6.479.815 2.736 3.713 3.66 6.383 3.364.136-.02.275-.039.415-.056-.138.022-.276.04-.415.056-3.912.58-7.387 2.005-2.83 7.078 5.013 5.19 6.87-1.113 7.823-4.308.953 3.195 2.05 9.271 7.733 4.308 4.267-4.308 1.172-6.498-2.74-7.078a8.741 8.741 0 0 1-.415-.056c.14.017.279.036.415.056 2.67.297 5.568-.628 6.383-3.364.246-.828.624-5.79.624-6.478 0-.69-.139-1.861-.902-2.206-.659-.298-1.664-.62-4.3 1.24C16.046 4.748 13.087 8.687 12 10.8Z"/>
            </svg>
        </a>
        
        <a 
            href={linkedinUrl}
            class="share-link hover:text-main transition-colors"
            target="_blank" 
            rel="noopener noreferrer"
            title="Share on LinkedIn"
            aria-label="Share on LinkedIn"
        >
            <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
            </svg>
        </a>
        
        <button 
            class="share-link copy-link-button hover:text-main transition-colors"
            data-url={url}
            title="Copy link to clipboard"
            aria-label="Copy link to clipboard"
        >
            <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"/>
                <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"/>
            </svg>
        </button>
    </div>
</div>

<style>
    .share-links {
        padding: 0.75rem;
        background-color: var(--theme-bg-subtle);
        border-radius: 0.5rem;
        margin-top: 1rem;
    }
    
    .share-link {
        padding: 0.25rem;
        display: inline-flex;
        border-radius: 0.25rem;
        transition: background-color 0.2s;
    }
    
    .share-link:hover {
        background-color: var(--theme-bg-hover);
    }
    
    button.share-link {
        background: none;
        border: none;
        cursor: pointer;
    }
    
    .share-link.copied {
        color: var(--theme-accent);
    }
</style>

<script>
    document.addEventListener('astro:page-load', () => {
        const copyButtons = document.querySelectorAll('.copy-link-button');
        
        copyButtons.forEach((button) => {
            button.addEventListener('click', async () => {
                const url = button.getAttribute('data-url');
                
                if (url) {
                    try {
                        await navigator.clipboard.writeText(url);
                        const originalTitle = button.getAttribute('title');
                        button.setAttribute('title', 'Copied!');
                        
                        // Visual feedback
                        button.classList.add('copied');
                        
                        setTimeout(() => {
                            button.setAttribute('title', originalTitle || 'Copy link to clipboard');
                            button.classList.remove('copied');
                        }, 2000);
                    } catch (err) {
                        console.error('Failed to copy:', err);
                    }
                }
            });
        });
    });
</script>